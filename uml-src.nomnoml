#.interface: fill=#bdf dashed italic
#.abstract: fill=#fb7 title=italic
#.exception: fill=tomato

[Main|
	public static void main(String\[\] args) throws UseFailureException|
    private static class Roof
]

[Main]_/_[<note> В методе "Main.main" будут создаваться локальный и анонимные классы, имплементирующие Damagable]

[Main]<__[Roof]
[Room]<-[Roof|
	private int pipeCount|
    public class OverlookPipe
]


[Damagable]<:-[OverlookPipe]
[Roof]<--[OverlookPipe|
	private int pipeNumber|
    @Override damage()
]

[<interface> Damagable|
	public void damage()
]
[Damagable]<:-[OverlookPipe|
	static int count;
    int pipeNumber|
	@Override damage()
]

[Damagable]<:-[Room|
	private String name
    private ArrayList<Damagable> damagableStuff|
    public Room addDamagable(Damagable thing);
    @Override toString();
    @Override hashCode();
    @Override damage()
]

[Damagable]<:-[Location|
	private HashMap<Room, ArrayList<Entity>> rooms|
    public void transferTo(Entity entity, Room room);
    public Room getRoomByEntity(Entity entity);
    @Override damage()
]

[<interface>Usable||
	public Temperature use() throws UseFailureException
]

[Usable]-/-[<exception> Exception]

[Exception]<-[<exception>UseFailureException extends Exception]

[Usable]<:-[Valve|
	private Temperature temperature|
    private boolean willJam();
    @Override use()
]

[Valve]-/-[<table>enum Temperature|
  Freezing ||
  Cold |
  Normal |
  Hot |
  Melting
]

[<interface>Measurable||
	public String units()
    public int measure();
    public boolean isTooHigh();
    public boolean isTooLow()
]

[Measurable]<:-[Manometr|
	private double pressure|
    public void increasePressure(double delta);
    public void decreasePressure(double delta);
    @Override units();
    @Override measure(...);
    @Override isTooHigh();
    @Override isTooLow()
]

[Usable]<:-[Boiler|
	private Valve valve;
    private Manometr manometr|
    @Override use();
    public void increasePressure();
    public void relievePressure();
    public boolean isPressureTooHigh();
    private void explode()
]

[<abstract>abstract Entity|
	private String name;
    private Set<Emotion> emotions|
    public String name();
    public feel(Emotion emotion);
    public stopFeeling(Emotion emotion);
	abstract public void speaks(String phrase);
    abstract public Temperature uses(Usable thing) throws UseFailureException;
    @Override toString()
]

[abstract Entity]<:-[Jack Torrance|
	...;
	@Override speaks(...);
    @Override uses(...)
]

[abstract Entity]<:-[Creature|
	...;
	private Entity possessedEntity|
    ...;
    @Override speaks(...);
    @Override uses(...);
    @Override equals(...);
    public void possess(Entity entity);
    public void possessedEntity()
]

[<exception> RuntimeException]

[RuntimeException]<-[<exception> OverlookExplosionException]

[abstract Entity]-/-[<table> enum Emotions |
    Fear ||
    Panic |
    Ecstasy
]